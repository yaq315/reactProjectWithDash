{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\project-react\\\\src\\\\components\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './dash.css';\n// import logo from \"../image/logo.png\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// function Dashboard() {\n//     const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [students, setStudents] = useState([]);\n//   const [newStudent, setNewStudent] = useState({ name: \"\", email: \"\", phone: \"\", age: \"\" });\n//   const [editingIndex, setEditingIndex] = useState(null);\n\n//   const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewStudent({ ...newStudent, [name]: value });\n//   };\n\n//   const addStudent = () => {\n//     if (!newStudent.name || !newStudent.email || !newStudent.phone || !newStudent.age) {\n//       toast.error(\"Please fill all fields\");\n//       return;\n//     }\n//     setStudents([...students, newStudent]);\n//     setNewStudent({ name: \"\", email: \"\", phone: \"\", age: \"\" });\n//     toggleModal();\n//     toast.success(\"Student added successfully!\");\n//   };\n//   // حالة لإدارة عرض القائمة الجانبية\n//   const [isSideMenuVisible, setSideMenuVisible] = useState(false);\n\n//   // حالة لإدارة الوضع الليلي\n//   const [isDarkMode, setDarkMode] = useState(false);\n\n//   // دالة لتبديل عرض القائمة الجانبية\n//   const toggleSideMenu = () => {\n//     setSideMenuVisible(!isSideMenuVisible);\n//   };\n\n//   // دالة لتبديل الوضع الليلي\n//   const toggleTheme = () => {\n//     setDarkMode(!isDarkMode);\n//   };\n\n//   return (\n//     <div className={`container ${isDarkMode ? 'dark-theme-variables' : ''}`}>\n//       <aside style={{ display: isSideMenuVisible ? 'block' : 'none' }}>\n//         <div className=\"top\">\n//           <div className=\"logo1\">\n//             <img src={logo} alt=\"Logo\" />\n//             <h3>\n//               <span className=\"danger\"></span>{\" \"}\n//             </h3>\n//           </div>\n//           {/* <div className=\"close\" id=\"close_btn\" onClick={toggleSideMenu}>\n//             <span className=\"material-symbols-sharp\">close</span>\n//           </div> */}\n//         </div>\n//         {/* end top */}\n//         <div className=\"sidebar\">\n//           {/* <a href=\"#\">\n//             <span className=\"material-symbols-sharp\">grid_view </span>\n//             <h3>Dashboard</h3>\n//           </a> */}\n//           <a href=\"#\" className=\"active\">\n//             <span className=\"material-symbols-sharp\">Teachers </span>\n\n//           </a>\n\n//           <a href=\"#\" onClick={(e) => { e.preventDefault(); toggleModal(); }} className=\"add-student-link\">Add Student</a>\n\n//           {isModalOpen && (\n//         <div className=\"modal-overlay\" style={{\n//           position: \"fixed\",\n//           top: 0,\n//           left: 0,\n//           width: \"100%\",\n//           height: \"100%\",\n//           backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n//           display: \"flex\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//           zIndex: 1000\n//         }}>\n//           <div className=\"modal\" style={{\n//             backgroundColor: \"white\",\n//             padding: \"20px\",\n//             borderRadius: \"8px\",\n//             width: \"300px\",\n//             textAlign: \"center\"\n//           }}>\n\n//             <input type=\"text\" name=\"name\" placeholder=\"Name\" value={newStudent.name} onChange={handleInputChange} />\n//             <input type=\"email\" name=\"email\" placeholder=\"Email\" value={newStudent.email} onChange={handleInputChange} />\n//             <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={newStudent.phone} onChange={handleInputChange} />\n//             <input type=\"number\" name=\"age\" placeholder=\"Age\" value={newStudent.age} onChange={handleInputChange} />\n//             <button onClick={addStudent}>{editingIndex !== null ? \"Update\" : \"Add\"}</button>\n//             <button onClick={toggleModal}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n\n//           <a href=\"#\">\n//             <span className=\"material-symbols-sharp\">logout </span>\n\n//           </a>\n//         </div>\n//       </aside>\n//       {/* --------------\n//     end aside\n//   -------------------- */}\n//       {/* --------------\n//     start main part\n//   --------------- */}\n//       <main>\n//         <h1>School Manegment </h1>\n//         <div className=\"insights\">\n//           <div className=\"sales\">\n//             <div className=\"middle\">\n//               <div className=\"left\">\n//                 <h3>Teachers</h3>\n//                 <h1>4</h1>\n//               </div>\n//               <div className=\"progress\">\n//                 {/* <svg>\n//                   <circle  cy={40} cx={40} />\n//                 </svg> */}\n//                 {/* <div className=\"number\">\n//                   <p>80%</p>\n//                 </div> */}\n//               </div>\n//             </div>\n\n//           </div>\n//           {/* end selling */}\n//           {/* start expenses */}\n//           <div className=\"expenses\">\n//             <div className=\"middle\">\n//               <div className=\"left\">\n//                 <h3>Students</h3>\n//                 <h1>20</h1>\n//               </div>\n//               <div className=\"progress\">\n//               </div>\n//             </div>\n\n//           </div>\n//           <div className=\"income\">\n//             <div className=\"middle\">\n//               <div className=\"left\">\n//                 <h3>Gender of student</h3>\n//                 <h1>girls: 10</h1>\n//                 <h1>boys: 10</h1>\n//               </div>\n//               <div className=\"progress\">\n//                 <div className=\"number\">\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           {/* end income */}\n//         </div>\n//         {/* end insights */}\n//         <div className=\"recent_order\">\n//           <h2>scduale of students</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>student Name</th>\n//                 <th>Email</th>\n//                 <th>Phone</th>\n//                 <th>age</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//             {students.map((student, index) => (\n//               <tr key={index}>\n//                 <td>{student.name}</td>\n//                 <td>{student.email}</td>\n//                 <td>{student.phone}</td>\n//                 <td>{student.age}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//           </table>\n//           <ToastContainer />\n//           <a href=\"#\">Show All</a>\n//         </div>\n//       </main>\n//       {/*----------------\n//      end main\n//     -----------------*/}\n//       {/*--------------\n//     start right main \n//   --------------------*/}\n//       <div className=\"right\">\n//         <div className=\"top\">\n//           <button id=\"menu_bar\" onClick={toggleSideMenu}>\n//             <span className=\"material-symbols-sharp\">menu</span>\n//           </button>\n//           <div className=\"theme-toggler\" onClick={toggleTheme}>\n//             <span className={`material-symbols-sharp ${!isDarkMode ? 'active' : ''}`}>light_mode</span>\n//             <span className={`material-symbols-sharp ${isDarkMode ? 'active' : ''}`}>dark_mode</span>\n//           </div>\n//           <div className=\"profile\">\n//             <div className=\"info\">\n//               <p>\n//                 <b>Babar</b>\n//               </p>\n//               <p>Admin</p>\n//               <small className=\"text-muted\" />\n//             </div>\n//             <div className=\"profile-photo\">\n//               <img src=\"./images/profile-1.jpg\" alt=\"\" />\n//             </div>\n//           </div>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;import React, { useState } from 'react';\nimport './dash.css';\nimport logo from \"../image/logo.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Sidebar from './Sidebar';\nimport Modal from '.Modal';\nimport Insights from './Insights';\nimport Table from './Table';\nimport Profile from './Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    age: \"\"\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewStudent({\n      ...newStudent,\n      [name]: value\n    });\n  };\n  const addStudent = () => {\n    if (!newStudent.name || !newStudent.email || !newStudent.phone || !newStudent.age) {\n      toast.error(\"Please fill all fields\");\n      return;\n    }\n    setStudents([...students, newStudent]);\n    setNewStudent({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      age: \"\"\n    });\n    toggleModal();\n    toast.success(\"Student added successfully!\");\n  };\n  const [isSideMenuVisible, setSideMenuVisible] = useState(false);\n  const [isDarkMode, setDarkMode] = useState(false);\n  const toggleSideMenu = () => setSideMenuVisible(!isSideMenuVisible);\n  const toggleTheme = () => setDarkMode(!isDarkMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container ${isDarkMode ? 'dark-theme-variables' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      isSideMenuVisible: isSideMenuVisible,\n      toggleSideMenu: toggleSideMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"School Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Insights, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        students: students\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {\n      toggleTheme: toggleTheme,\n      isDarkMode: isDarkMode,\n      toggleSideMenu: toggleSideMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      newStudent: newStudent,\n      handleInputChange: handleInputChange,\n      addStudent: addStudent,\n      toggleModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"MhUOyzkuGwjsCwDqMMFuHzUToCw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["logo","ToastContainer","toast","Sidebar","Modal","Insights","Table","Profile","jsxDEV","_jsxDEV","Dashboard","_s","isModalOpen","setIsModalOpen","useState","students","setStudents","newStudent","setNewStudent","name","email","phone","age","editingIndex","setEditingIndex","toggleModal","handleInputChange","e","value","target","addStudent","error","success","isSideMenuVisible","setSideMenuVisible","isDarkMode","setDarkMode","toggleSideMenu","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Orange/project-react/src/components/dashboard/dashboard.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './dash.css';\r\n// import logo from \"../image/logo.png\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\n// function Dashboard() {\r\n//     const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [students, setStudents] = useState([]);\r\n//   const [newStudent, setNewStudent] = useState({ name: \"\", email: \"\", phone: \"\", age: \"\" });\r\n//   const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n//   const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewStudent({ ...newStudent, [name]: value });\r\n//   };\r\n\r\n//   const addStudent = () => {\r\n//     if (!newStudent.name || !newStudent.email || !newStudent.phone || !newStudent.age) {\r\n//       toast.error(\"Please fill all fields\");\r\n//       return;\r\n//     }\r\n//     setStudents([...students, newStudent]);\r\n//     setNewStudent({ name: \"\", email: \"\", phone: \"\", age: \"\" });\r\n//     toggleModal();\r\n//     toast.success(\"Student added successfully!\");\r\n//   };\r\n//   // حالة لإدارة عرض القائمة الجانبية\r\n//   const [isSideMenuVisible, setSideMenuVisible] = useState(false);\r\n\r\n//   // حالة لإدارة الوضع الليلي\r\n//   const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n//   // دالة لتبديل عرض القائمة الجانبية\r\n//   const toggleSideMenu = () => {\r\n//     setSideMenuVisible(!isSideMenuVisible);\r\n//   };\r\n\r\n//   // دالة لتبديل الوضع الليلي\r\n//   const toggleTheme = () => {\r\n//     setDarkMode(!isDarkMode);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`container ${isDarkMode ? 'dark-theme-variables' : ''}`}>\r\n//       <aside style={{ display: isSideMenuVisible ? 'block' : 'none' }}>\r\n//         <div className=\"top\">\r\n//           <div className=\"logo1\">\r\n//             <img src={logo} alt=\"Logo\" />\r\n//             <h3>\r\n//               <span className=\"danger\"></span>{\" \"}\r\n//             </h3>\r\n//           </div>\r\n//           {/* <div className=\"close\" id=\"close_btn\" onClick={toggleSideMenu}>\r\n//             <span className=\"material-symbols-sharp\">close</span>\r\n//           </div> */}\r\n//         </div>\r\n//         {/* end top */}\r\n//         <div className=\"sidebar\">\r\n//           {/* <a href=\"#\">\r\n//             <span className=\"material-symbols-sharp\">grid_view </span>\r\n//             <h3>Dashboard</h3>\r\n//           </a> */}\r\n//           <a href=\"#\" className=\"active\">\r\n//             <span className=\"material-symbols-sharp\">Teachers </span>\r\n          \r\n//           </a>\r\n         \r\n//           <a href=\"#\" onClick={(e) => { e.preventDefault(); toggleModal(); }} className=\"add-student-link\">Add Student</a>\r\n\r\n//           {isModalOpen && (\r\n//         <div className=\"modal-overlay\" style={{\r\n//           position: \"fixed\",\r\n//           top: 0,\r\n//           left: 0,\r\n//           width: \"100%\",\r\n//           height: \"100%\",\r\n//           backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n//           display: \"flex\",\r\n//           justifyContent: \"center\",\r\n//           alignItems: \"center\",\r\n//           zIndex: 1000\r\n//         }}>\r\n//           <div className=\"modal\" style={{\r\n//             backgroundColor: \"white\",\r\n//             padding: \"20px\",\r\n//             borderRadius: \"8px\",\r\n//             width: \"300px\",\r\n//             textAlign: \"center\"\r\n//           }}>\r\n            \r\n//             <input type=\"text\" name=\"name\" placeholder=\"Name\" value={newStudent.name} onChange={handleInputChange} />\r\n//             <input type=\"email\" name=\"email\" placeholder=\"Email\" value={newStudent.email} onChange={handleInputChange} />\r\n//             <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={newStudent.phone} onChange={handleInputChange} />\r\n//             <input type=\"number\" name=\"age\" placeholder=\"Age\" value={newStudent.age} onChange={handleInputChange} />\r\n//             <button onClick={addStudent}>{editingIndex !== null ? \"Update\" : \"Add\"}</button>\r\n//             <button onClick={toggleModal}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n       \r\n//           <a href=\"#\">\r\n//             <span className=\"material-symbols-sharp\">logout </span>\r\n           \r\n//           </a>\r\n//         </div>\r\n//       </aside>\r\n//       {/* --------------\r\n//     end aside\r\n//   -------------------- */}\r\n//       {/* --------------\r\n//     start main part\r\n//   --------------- */}\r\n//       <main>\r\n//         <h1>School Manegment </h1>\r\n//         <div className=\"insights\">\r\n//           <div className=\"sales\">\r\n//             <div className=\"middle\">\r\n//               <div className=\"left\">\r\n//                 <h3>Teachers</h3>\r\n//                 <h1>4</h1>\r\n//               </div>\r\n//               <div className=\"progress\">\r\n//                 {/* <svg>\r\n//                   <circle  cy={40} cx={40} />\r\n//                 </svg> */}\r\n//                 {/* <div className=\"number\">\r\n//                   <p>80%</p>\r\n//                 </div> */}\r\n//               </div>\r\n//             </div>\r\n          \r\n//           </div>\r\n//           {/* end selling */}\r\n//           {/* start expenses */}\r\n//           <div className=\"expenses\">\r\n//             <div className=\"middle\">\r\n//               <div className=\"left\">\r\n//                 <h3>Students</h3>\r\n//                 <h1>20</h1>\r\n//               </div>\r\n//               <div className=\"progress\">\r\n//               </div>\r\n//             </div>\r\n           \r\n//           </div>\r\n//           <div className=\"income\">\r\n//             <div className=\"middle\">\r\n//               <div className=\"left\">\r\n//                 <h3>Gender of student</h3>\r\n//                 <h1>girls: 10</h1>\r\n//                 <h1>boys: 10</h1>\r\n//               </div>\r\n//               <div className=\"progress\">\r\n//                 <div className=\"number\">\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           {/* end income */}\r\n//         </div>\r\n//         {/* end insights */}\r\n//         <div className=\"recent_order\">\r\n//           <h2>scduale of students</h2>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>student Name</th>\r\n//                 <th>Email</th>\r\n//                 <th>Phone</th>\r\n//                 <th>age</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//             {students.map((student, index) => (\r\n//               <tr key={index}>\r\n//                 <td>{student.name}</td>\r\n//                 <td>{student.email}</td>\r\n//                 <td>{student.phone}</td>\r\n//                 <td>{student.age}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//           </table>\r\n//           <ToastContainer />\r\n//           <a href=\"#\">Show All</a>\r\n//         </div>\r\n//       </main>\r\n//       {/*----------------\r\n//      end main\r\n//     -----------------*/}\r\n//       {/*--------------\r\n//     start right main \r\n//   --------------------*/}\r\n//       <div className=\"right\">\r\n//         <div className=\"top\">\r\n//           <button id=\"menu_bar\" onClick={toggleSideMenu}>\r\n//             <span className=\"material-symbols-sharp\">menu</span>\r\n//           </button>\r\n//           <div className=\"theme-toggler\" onClick={toggleTheme}>\r\n//             <span className={`material-symbols-sharp ${!isDarkMode ? 'active' : ''}`}>light_mode</span>\r\n//             <span className={`material-symbols-sharp ${isDarkMode ? 'active' : ''}`}>dark_mode</span>\r\n//           </div>\r\n//           <div className=\"profile\">\r\n//             <div className=\"info\">\r\n//               <p>\r\n//                 <b>Babar</b>\r\n//               </p>\r\n//               <p>Admin</p>\r\n//               <small className=\"text-muted\" />\r\n//             </div>\r\n//             <div className=\"profile-photo\">\r\n//               <img src=\"./images/profile-1.jpg\" alt=\"\" />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n       \r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;import React, { useState } from 'react';\r\nimport './dash.css';\r\nimport logo from \"../image/logo.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Sidebar from './Sidebar';\r\nimport Modal from '.Modal';\r\nimport Insights from './Insights';\r\nimport Table from './Table';\r\nimport Profile from './Profile';\r\n\r\nfunction Dashboard() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [students, setStudents] = useState([]);\r\n  const [newStudent, setNewStudent] = useState({ name: \"\", email: \"\", phone: \"\", age: \"\" });\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewStudent({ ...newStudent, [name]: value });\r\n  };\r\n\r\n  const addStudent = () => {\r\n    if (!newStudent.name || !newStudent.email || !newStudent.phone || !newStudent.age) {\r\n      toast.error(\"Please fill all fields\");\r\n      return;\r\n    }\r\n    setStudents([...students, newStudent]);\r\n    setNewStudent({ name: \"\", email: \"\", phone: \"\", age: \"\" });\r\n    toggleModal();\r\n    toast.success(\"Student added successfully!\");\r\n  };\r\n\r\n  const [isSideMenuVisible, setSideMenuVisible] = useState(false);\r\n  const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n  const toggleSideMenu = () => setSideMenuVisible(!isSideMenuVisible);\r\n  const toggleTheme = () => setDarkMode(!isDarkMode);\r\n\r\n  return (\r\n    <div className={`container ${isDarkMode ? 'dark-theme-variables' : ''}`}>\r\n      <Sidebar isSideMenuVisible={isSideMenuVisible} toggleSideMenu={toggleSideMenu} />\r\n      <main>\r\n        <h1>School Management</h1>\r\n        <Insights />\r\n        <Table students={students} />\r\n        <ToastContainer />\r\n      </main>\r\n      <Profile toggleTheme={toggleTheme} isDarkMode={isDarkMode} toggleSideMenu={toggleSideMenu} />\r\n      {isModalOpen && (\r\n        <Modal\r\n          newStudent={newStudent}\r\n          handleInputChange={handleInputChange}\r\n          addStudent={addStudent}\r\n          toggleModal={toggleModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,mBAAmB;AACpC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}